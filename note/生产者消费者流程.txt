一、生产者
	1. 连接到 RabbitMQ
	2. 获得信道
	3. 声明交换器
	4. 产生信息
	5. 关闭信道
	6. 关闭连接
	
二、消费者
	1. 连接到 RabbitMQ
	2. 获得信道
	3. 声明交换器
	4. 声明队列
	5. 把队列和交换器绑定起来
	6. 消费信息
	7. 关闭信道
	8. 关闭连接
	
	
	
	
	
amqp_maybe_release_buffers的使用说明（http://rabbitmq.1065348.n5.nabble.com/rabbitmq-c-how-many-channels-I-need-td27448.html）：
rabbitmq-c uses a connection-wide memory pool that is recycled when you call amqp_maybe_release_buffers(). When you call this function, some memory is returned to the OS, but most of the memory is marked as unused and will be reused by rabbitmq-c at some point in the future.
A couple rules of thumb for dealing with memory when using rabbitmq-c:
1. Anytime you call amqp_maybe_release_buffers(), any pointer returned from rabbitmq-c before that call becomes invalid. Any use will lead to undefined behavior.
2. For RPC-style methods (amqp_queue_declare, amqp_exchange_declare, amqp_basic_consume, anything that returns an amqp_*_ok_t *). You should call amqp_maybe_release_buffers() immediately after you've finishing using whatever that method returns: e.g.,:
amqp_queue_purge_ok_t *purge = amqp_queue_purge(connection, channel, amqp_cstring_bytes("myqueue");
/* You should check to make sure purge != NULL, as that indicates failure */
int messages_purged = purge->message_count;
amqp_maybe_release_buffers(connection); /* NOTE: at this point, the purge object is no longer valid */
3. When consuming messages you should call amqp_maybe_release_buffers() after you've finished with each amqp_frame_t returned from amqp_simple_wait_frame(). 




不要在线程间共享 amqp_connection_state_t, its socket, and all associated amqp_channel_
可以在不同的连接中使用相同的channel id，因为 channel id是连接相关的： channels are on a per-connection basis, so it is ok to have two different connections with the same channel identifiers.
http://rabbitmq.1065348.n5.nabble.com/Multithreading-and-rabbitmq-c-td19739.html#a19740

多线程
http://rabbitmq.1065348.n5.nabble.com/Multiple-listener-over-single-connection-in-rabbitmq-c-td33439.html#a33466

channel confirm
http://rabbitmq.1065348.n5.nabble.com/rabbitmq-c-confirmation-td27910.html#a27917

例子解释
http://rabbitmq.1065348.n5.nabble.com/Newbie-using-rabbitmq-c-td15940.html#a15941